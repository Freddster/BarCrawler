@model BarCrawler.Models.PictureModel
@{
    ViewBag.Title = "EditPicture";
}

<div class="container" style="width: 100%; height: 350px; overflow: hidden;">
    <img src="http://i0.kym-cdn.com/photos/images/newsfeed/000/343/462/79a.gif" alt="Img" style="max-height: 350px; position: relative;" />
</div>

<hr />
<h2>Ændre billede</h2>

@using (Html.BeginForm("EditPicture", "BarProfil", FormMethod.Post, new { id = "EditPicture" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BarID)
        @Html.HiddenFor(model => model.CreateTime)
        @Html.HiddenFor(model => model.PictureID)
        @Html.HiddenFor(model => model.TimeStamp)
        @Html.HiddenFor(model => model.BarModel)

        <div class="form-group">
            @Html.LabelFor(model => model.Directory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Directory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Directory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary" style="font-family:'Helvetica';">
                    <i class="glyphicon glyphicon-save"></i>
                    Save
                </button>
            </div>
        </div>
    </div>
}
@Html.ActionLink("Tilbage", "Index", new { id = Model.BarID })